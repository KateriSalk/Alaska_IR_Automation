---
title: "ATTAINS Upload File Creation"
author: "Tetra Tech"
date: last-modified
date-format: "MMMM DD, YYYY"
format: docx
editor: visual
---

## Introduction

The following user guide pertains to the [*create_attains_Assessment.R*](https://github.com/KateriSalk/Alaska_IR_Automation/blob/main/Code/7_Results/create_attains_Assessment.R) and [*create_attains_AU.R*](https://github.com/KateriSalk/Alaska_IR_Automation/blob/main/Code/7_Results/create_attains_AU.R) scripts developed by Tetra Tech for the Alaska Department of Environmental Conservation (AK DEC). This guide assumes that the user has relatively recent versions of R and [RStudio](https://posit.co/download/rstudio-desktop/) installed and that they are familiar with the R coding language. Please direct any questions regarding the usage of these scripts to Amber Crawford, AK DEC (amber.crawford\@alaska.gov).

## Purpose

The purpose of the *create_attains_Assessment.R* script is to take the outputs of previous scripts and create required the ATTAINS Assessment upload csv files. Similarly, the purpose of the *create_attains_AU.R* script is to take the outputs of previous scripts and create required the ATTAINS Assessment Unit upload csv files. The csv outputs of each script are reflective of the ATTAINS template version 2022-07-18.

## Required Packages

The required packages for the *data_processing.R* code are [*tidyverse*](https://www.tidyverse.org/) and [*readxl*](https://cran.r-project.org/web/packages/readxl/index.html)*.* Installation for the *tidyverse* packages can be found in the Data Pull Guide. Below is a code chunk that demonstrates how to install and load these packages.

```{r}
#| output: false
#| eval: false
####Load Packages####
library(tidyverse)

#install.packages('readxl')
library(readxl)

```

## Required Inputs

This code has specific exterior files that are required for it to run. The inputs are listed below. All input files are loaded at the beginning of the script.

+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| File Name                                              | Purpose                                                                                              | Source              |
+========================================================+======================================================================================================+=====================+
| WQ_metadata_trimmed_with_data_sufficiency_20240117.csv | Provides necessary metadata for ATTAINS csv outputs                                                  | *data_processing.R* |
|                                                        |                                                                                                      |                     |
|                                                        | \*\*For Assessment Units Only                                                                        |                     |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| AUID_crosswalk.csv                                     | Connects previous AU IDs to current AU IDs. Required to connect to previous year ATTAINS information | AK DEC              |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| ATTAINS_AK_Asessments_DataDownload_20240126.xlsx       | Provides information from previous years ATTAINS                                                     | ATTAINS             |
|                                                        |                                                                                                      |                     |
|                                                        | \*For Assessment Only                                                                                |                     |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| ATTAINS_AK_AsessmentUnits_DataDownload_20240126.xlsx   | Provides information from previous years ATTAINS                                                     | ATTAINS             |
|                                                        |                                                                                                      |                     |
|                                                        | \*\*For Assessment Units Only                                                                        |                     |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| WQ_data_trimmed_long_withAU20240117.csv                | Provides sample information such as date range that is required in the ATTAINS csv outputs           | *data_processing.R* |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+
| categorized_aus_20240222.csv                           | Provides necessary metadata for ATTAINS csv outputs                                                  | *categorize_au.R*   |
+--------------------------------------------------------+------------------------------------------------------------------------------------------------------+---------------------+

## Combine all AU IDs

In order to connect the current IR cycle ATTAINS information to previous years, we need to use the *AUID_crosswalk.csv* information. The next section of code pulls previous ATTAINS information with the current AU IDs, previous AU IDs, and historical AU IDs. None of the AU ID numbers are overridden in this code. This information is then combined together to provide previous metadata to the current year's upload. The following code shows the process in *create_attains_Assessment.R*.

```{r}
#| output: false
#| eval: false
#Combine sample data with AUID crosswalk
data_category_AUID_added <- categorized_aus %>%
  left_join(au_id_crosswalk, by = c('AUID_ATTNS' = 'Active_AUID'))


#Join with previous AU ATTAINS by each AUID type
data_current_AU <- data_category_AUID_added %>%
  mutate(assessmentUnitId = AUID_ATTNS) %>%
  right_join(previous_assessment_attains, by = c('assessmentUnitId'))

#Find retired AUs
data_retired_AU <- data_category_AUID_added %>%
  mutate(assessmentUnitId = Retired_AUID) %>%
  filter(!is.na(assessmentUnitId)) %>%
  right_join(previous_assessment_attains, by = c('assessmentUnitId'))

#Find historical AUs
data_historical_AU <- data_category_AUID_added %>%
  mutate(assessmentUnitId = Historical_AUID) %>%
  filter(!is.na(assessmentUnitId)) %>%
  right_join(previous_assessment_attains, by = c('assessmentUnitId'))

#Combine all together
#This becomes the starting point for each csv export process
data_all_AUs <- data_current_AU %>%
  rbind(data_retired_AU) %>%
  rbind(data_historical_AU) %>%
  unique()
```

\*For create_attains_AU.R, the steps are the same, but the *data_sufficiency* variable replaces the *categorized_aus* variable.

## Assessment Outputs

The following sections outline the process to create the csvs required for ATTAINS Assessment uploads. The output of each section is exported as a csv to a folder location of the user's choosing.

### Assessments

The 'Assessments' csv output requires Assessment Unit ID, Agency, and Cycle Last Assessed. The following code include all the optional columns as NA values.

```{r}
#| output: false
#| eval: false
assessments <- data_all_AUs %>%
  select(AUID_ATTNS, organizationId, reportingCycle, Use_Category, Use) %>%
  mutate(ASSESSMENT_COMMENT = Use,
         AGENCY_CODE = 'S',
         YEAR_LAST_MONITORED = '2023',
         ASSESSMENT_RATIONALE = NA,
         TROPHIC_STATUS = NA) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS, 
         CYCLE_LAST_ASSESSED = reportingCycle, #Pulling from previous year's ATTAINS
         ASSESSMENT_UNIT_STATE_IR_CAT = Use_Category) %>%
  unique() %>%
  select(!Use) %>%
  select(ASSESSMENT_UNIT_ID, AGENCY_CODE, CYCLE_LAST_ASSESSED, YEAR_LAST_MONITORED,
         ASSESSMENT_UNIT_STATE_IR_CAT, ASSESSMENT_COMMENT, ASSESSMENT_RATIONALE,
         TROPHIC_STATUS)
```

### Uses

The 'Uses' csv output requires the Assessment Unit ID, Use Name, Use Support, and Agency. The Use Support (USE_ATTAINMENT_CODE) column required a character version of the state-level numeric system. This change is in the *case_when* statement. Some optional columns were filled out including: Monitoring Start Date, Monitoring End Date, and Use Level State IR Category Code. The following code includes the rest of the optional columns as NA values.

```{r}
#| output: false
#| eval: false
monitoring_dates <- samples %>%
  select(AUID_ATTNS, ActivityStartDate) %>%
  group_by(AUID_ATTNS) %>%
  reframe(AUID_ATTNS = AUID_ATTNS,
          USE_MONITORING_START = min(ActivityStartDate),
          USE_MONITORING_END = max(ActivityStartDate)) %>%
  unique()

uses <- data_all_AUs %>%
  select(AUID_ATTNS, AUID_ATTNS, Use, Use_Category) %>%
  left_join(monitoring_dates, by = 'AUID_ATTNS') %>%
  unique() %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         USE_NAME = Use) %>%
  mutate(USE_ATTAINMENT_CODE = case_when(Use_Category == 5 ~
                                           "N", #Not supporting
                                         Use_Category == 2 ~
                                           "F", #Fully supporting
                                         Use_Category == 3 ~
                                           "I", #Insufficient Information
                                         T ~
                                           "X"), #Not assessed
         USE_AGENCY_CODE = "S",
         USE_TREND = NA,
         USE_THREATENED = NA,
         USE_ASMT_BASIS = NA,
         USE_ASMT_DATE = NA,
         USE_ASSESSOR_NAME = NA,
         USE_COMMENT = NA,
         USE_STATE_IR_CAT = Use_Category,
         USE_ORG_QUALIFIER_FLAG = NA) %>%
  select(!Use_Category) %>%
  select(ASSESSMENT_UNIT_ID, USE_NAME, USE_AGENCY_CODE, USE_TREND, USE_THREATENED,
         USE_ASMT_BASIS, USE_MONITORING_START, USE_MONITORING_END, USE_ASMT_DATE,
         USE_ASSESSOR_NAME, USE_COMMENT, USE_STATE_IR_CAT, 
         USE_ORG_QUALIFIER_FLAG)
```

### Assessment Types

The 'Assessments Types' csv output is not required. Assessment Unit ID, Use Name, and Type were provided anyway. The Confidence column is optional and assigned a value of NA.

```{r}
#| output: false
#| eval: false
assessment_types <- data_all_AUs %>%
  select(AUID_ATTNS, Use,  assessmentTypes) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         USE_NAME = Use,
         USE_ASMT_TYPE = assessmentTypes) %>%  #PULL FROM PREVIOUS ATTAINS assessmentTypes
  mutate(USE_ASMT_CONFIDENCE = NA) %>%
  unique()
```

### Parameters

The 'Parameters' csv output requires Assessment Unit ID, Parameter Name, Associated Use, Parameter Status, and Attainment. The following code include all the optional columns as NA values.

```{r}
#| output: false
#| eval: false
parameters <- data_all_AUs %>%
  select(AUID_ATTNS, TADA.CharacteristicName, Use, Use_Category, Individual_Category) %>%
  mutate(PARAM_STATUS_NAME = case_when(Use_Category == 5 ~ #CATEGORIES ARE UNCLEAR
                                           "N", 
                                         Use_Category == 2 ~
                                           "Meeting Criteria", 
                                         Use_Category == 3 ~
                                           "Insufficient Information", 
                                         T ~
                                           "X"),
         PARAM_TREND = NA,
         PARAM_COMMENT = NA,
         PARAM_AGENCY_CODE = NA,
         PARAM_POLLUTANT_INDICATOR = NA, #Should be Y/N
         PARAM_YEAR_LISTED = NA,
         PARAM_TARGET_TMDL_DATE = NA,
         PARAM_EXPECTED_TO_ATTAIN = NA,
         PARAM_PRIORITY_RANKING = NA, 
         PARAM_CONSENT_DECREE_CYCLE = NA,
         PARAM_ALT_LISTING_ID = NA,
         PARAM_ORG_QUALIFIER_FLAG = NA,
         PARAM_DELISTING_REASON = NA,
         PARAM_DELISTING_COMMENT = NA,
         PARAM_DELISTING_AGENCY = NA) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         PARAM_NAME = TADA.CharacteristicName,
         PARAM_USE_NAME = Use,
         PARAM_ATTAINMENT_CODE = Individual_Category,
         PARAM_STATE_IR_CAT = Use_Category) %>%
  unique() %>%
  select(ASSESSMENT_UNIT_ID, PARAM_NAME, PARAM_USE_NAME, PARAM_STATUS_NAME,
         PARAM_ATTAINMENT_CODE, PARAM_TREND, PARAM_COMMENT, PARAM_AGENCY_CODE,
         PARAM_POLLUTANT_INDICATOR, PARAM_YEAR_LISTED, PARAM_TARGET_TMDL_DATE,
         PARAM_EXPECTED_TO_ATTAIN, PARAM_PRIORITY_RANKING,
         PARAM_CONSENT_DECREE_CYCLE, PARAM_ALT_LISTING_ID, 
         PARAM_ORG_QUALIFIER_FLAG, PARAM_DELISTING_REASON, 
         PARAM_DELISTING_COMMENT, PARAM_DELISTING_AGENCY)
```

### 

Optional Outputs

The 'Assessment Method Types', 'Seasons', 'Sources', and 'Associated-Actions' csv outputs were not included since there was no required information and no evidence of AK DEC providing these in the past.

## Assessment Unit Outputs

The following sections outline the process to create the csvs required for ATTAINS Assessment Unit uploads. The output of each section is exported as a csv to a folder location of the user's choosing.

### Assessment Units

The 'Assessment Units' csv output requires Assessment Unit ID, Name, State, Agency, and Location Description. Use Class is provided, despite being an optional column. The Comment column is assigned NA values.

```{r}
#| output: false
#| eval: false
assessment_units <- data_all_AUs %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         USE_CLASS_NAME = AU_Type,
         ASSESSMENT_UNIT_NAME = assessmentUnitName,
         LOCATION_DESCRIPTION = locationText) %>%
  mutate(ASSESSMENT_UNIT_STATE = 'AK',
         ASSESSMENT_UNIT_AGENCY = 'S', #S for state agency
         ASSESSMENT_UNIT_COMMENT = NA) %>% #ASK ABOUT COMMENTS
  select(ASSESSMENT_UNIT_ID, ASSESSMENT_UNIT_NAME, ASSESSMENT_UNIT_STATE,
         ASSESSMENT_UNIT_AGENCY, ASSESSMENT_UNIT_COMMENT, LOCATION_DESCRIPTION,
         USE_CLASS_NAME) %>% #Change order to reflect template
  unique() 

#Some AUs have duplicates from having use class and some having NA
duplicate_values_na <- assessment_units %>% 
  group_by_at(vars(-USE_CLASS_NAME)) %>% #Find duplicate rows based on one having
  #a use class and another having NA
  filter(n() > 1) %>%
  #filter out NA values 
  filter(is.na(USE_CLASS_NAME))

#Remove all NA duplicated values in the assessment
combine_assessment_units <- assessment_units %>%
  anti_join(duplicate_values_na, by = c('ASSESSMENT_UNIT_ID', 'ASSESSMENT_UNIT_NAME', 'ASSESSMENT_UNIT_STATE',
                                        'ASSESSMENT_UNIT_AGENCY', 'ASSESSMENT_UNIT_COMMENT', 'LOCATION_DESCRIPTION',
                                        'USE_CLASS_NAME'))
```

### Water Types

The 'Water Types' csv output requires Assessment Unit ID, Water Type, Size, and Water Size Units. Size Source and Source Scale were pulled from previous ATTAINS records. The Estimation Method was assigned as NA.

```{r}
#| output: false
#| eval: false
water_types <- data_all_AUs %>%
  select(AUID_ATTNS, waterType, waterSize, waterSizeUnits, sizeSource, sourceScale) %>%
  mutate(ESTIMATION_METHOD = NA) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         WATER_TYPE = waterType,
         WATER_SIZE = waterSize,
         WATER_UNIT = waterSizeUnits,
         SIZE_SOURCE = sizeSource,
         SOURCE_SCALE = sourceScale) %>%
  select(ASSESSMENT_UNIT_ID, WATER_TYPE, WATER_SIZE, WATER_UNIT, SIZE_SOURCE, 
         ESTIMATION_METHOD, SOURCE_SCALE) %>% #Reorder columns
  unique()
```

### Locations

The 'Locations' csv output is optional, but all the information is present in the analysis and previous ATTAINS records. All columns must be provided if this csv is to be uploaded to ATTAINS including Assessment Unit ID, Location Type Context, Location Type, and Location Value.

```{r}
#| output: false
#| eval: false
locations <- data_all_AUs %>%
  select(AUID_ATTNS, locationTypeCode, locationText, locationDescription) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         LOCATION_TYPE_CODE = locationTypeCode,
         LOCATION_TYPE_CONTEXT = locationDescription,
         LOCATION_TEXT = locationText) %>%
  unique()
```

### Monitoring Stations

The 'Monitoring Stations' csv output is optional, but all the information is present in the analysis and previous ATTAINS records. Three columns must be provided if this csv is to be uploaded to ATTAINS including Assessment Unit ID, Organization Identifier, and Monitoring Station ID. The Data Link column is optional and is not included in the output.

```{r}
#| output: false
#| eval: false
monitoring_stations <- samples %>%
  select(AUID_ATTNS, ActivityConductingOrganizationText, MonitoringLocationIdentifier) %>%
  unique() %>%
  filter(!is.na(AUID_ATTNS)) %>%
  rename(ASSESSMENT_UNIT_ID = AUID_ATTNS,
         MS_ORG_ID = ActivityConductingOrganizationText,
         MS_LOCATION_ID = MonitoringLocationIdentifier)
```
